# -*- coding: utf-8 -*-
"""Naive_Bayes_Algorithm_Iris_Species_prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fA2HQbbtG8U4VjC62jBLZC7jsmRtvSay

# **Naive Bayes Algorithm Iris Species prediction**
##Supervised Machine Learning Algorithm
Iris Flower Species Prediction Using Naive Bayes Algorithm

Import dataset
"""

import numpy as np
import pandas as pd
df=pd.read_csv("/content/drive/MyDrive/ML_dataset/iris_ML")
df

"""Checking Missing Values"""

df.isna().sum()

"""Output and Input data"""

x=df.iloc[:,:-1].values
y=df.iloc[:,-1].values
x

"""Testing and Training data"""

from sklearn.model_selection import train_test_split
x_train,x_test,y_trian,y_test=train_test_split(x,y,test_size=0.30)
y_test

"""Normlization"""

from sklearn.preprocessing import StandardScaler
scalar=StandardScaler()
scalar.fit(x_train)
x_train=scalar.transform(x_train)
x_test=scalar.transform(x_test)
x_train

"""Applay naive Bayes Algorithm"""

from sklearn.naive_bayes import GaussianNB
classifier=GaussianNB()
classifier.fit(x_train,y_trian)
y_pred=classifier.predict(x_test) 
y_pred

y_test

"""Confusion metrics and display"""

from sklearn.metrics import classification_report,accuracy_score,confusion_matrix,ConfusionMatrixDisplay
label=['Iris-setosa','Iris-versicolor','Iris-virginica']
result=confusion_matrix(y_test,y_pred)
cmd=ConfusionMatrixDisplay(result,display_labels=label)
cmd.plot()
result

"""Perfomance Evaluation Accuracy Score"""

score=accuracy_score(y_test,y_pred)
score